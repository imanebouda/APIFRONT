// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITKANSys_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240422143845_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITKANSys_api.Models.Entities.Audit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateAudit")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomAudit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeAudit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Audit");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.Constat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AuditID")
                        .HasColumnType("int");

                    b.Property<string>("EcartTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EcartType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AuditID");

                    b.ToTable("Constat");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.Indicateurs", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("Cible")
                        .HasColumnType("float");

                    b.Property<string>("Formule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessusID")
                        .HasColumnType("int");

                    b.Property<double>("Tolerance")
                        .HasColumnType("float");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ProcessusID");

                    b.ToTable("Indicateurs");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.MQ", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateApplication")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perime")
                        .HasColumnType("int");

                    b.Property<int>("SMQID")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SMQID");

                    b.ToTable("MQ");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.Organisme", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("approval")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gsm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_type_organisme")
                        .HasColumnType("int");

                    b.Property<string>("logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("open_date")
                        .HasColumnType("date");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("social_reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("zip_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_type_organisme");

                    b.ToTable("Organismes");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.Param.Categories", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.Param.Parametrage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Parametrages");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.Param.SMQ", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SiteID");

                    b.ToTable("SMQ");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.Param.Sites", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.Param.TypeOrganisme", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("TypeOrganisme");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.ProcObjectifs", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ProcID");

                    b.ToTable("ProcObjectifs");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.ProcesObjectifs", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessusID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ProcessusID");

                    b.ToTable("ProcesObjectifs");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.ResultatsIndicateurs", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Annee")
                        .HasColumnType("int");

                    b.Property<int>("IndicateurID")
                        .HasColumnType("int");

                    b.Property<string>("Periode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Resultat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("IndicateurID");

                    b.ToTable("ResultatsIndicateurs");
                });

            modelBuilder.Entity("ITKANSys_api.Models.PQ", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateApplication")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perime")
                        .HasColumnType("int");

                    b.Property<int>("SMQID")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SMQID");

                    b.ToTable("PQ");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Methode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("ITKANSys_api.Models.PermissionRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("PermissionRoles");
                });

            modelBuilder.Entity("ITKANSys_api.Models.ProcDocuments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perimé")
                        .HasColumnType("int");

                    b.Property<int>("ProcID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ProcID");

                    b.ToTable("ProcDocuments");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Procedures", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessusID")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ProcessusID");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("ITKANSys_api.Models.ProcesDocuments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perime")
                        .HasColumnType("int");

                    b.Property<int>("ProcessusID")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ProcessusID");

                    b.ToTable("ProcesDocuments");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Processus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AuditID")
                        .HasColumnType("int");

                    b.Property<int>("Categorie_ID")
                        .HasColumnType("int");

                    b.Property<int>("CoPilote")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pilote")
                        .HasColumnType("int");

                    b.Property<int>("SMQ_ID")
                        .HasColumnType("int");

                    b.Property<int>("USER_ID")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AuditID");

                    b.HasIndex("Categorie_ID");

                    b.HasIndex("CoPilote");

                    b.HasIndex("Pilote");

                    b.HasIndex("SMQ_ID");

                    b.HasIndex("USER_ID");

                    b.ToTable("Processus");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ITKANSys_api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<string>("NomCompletUtilisateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.Constat", b =>
                {
                    b.HasOne("ITKANSys_api.Models.Entities.Audit", "Audit")
                        .WithMany("Constats")
                        .HasForeignKey("AuditID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Audit");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.Indicateurs", b =>
                {
                    b.HasOne("ITKANSys_api.Models.Processus", "Processus")
                        .WithMany()
                        .HasForeignKey("ProcessusID")
                        .IsRequired()
                        .HasConstraintName("FK_Indicateurs_ProcessusID");

                    b.Navigation("Processus");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.MQ", b =>
                {
                    b.HasOne("ITKANSys_api.Models.Entities.Param.SMQ", "SMQ")
                        .WithMany()
                        .HasForeignKey("SMQID")
                        .IsRequired()
                        .HasConstraintName("FK_MQ_SMQID");

                    b.Navigation("SMQ");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.Organisme", b =>
                {
                    b.HasOne("ITKANSys_api.Models.Entities.Param.TypeOrganisme", "TypeOrganisme")
                        .WithMany()
                        .HasForeignKey("id_type_organisme")
                        .IsRequired()
                        .HasConstraintName("FK_Organismes_TypeOrganisme");

                    b.Navigation("TypeOrganisme");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.Param.SMQ", b =>
                {
                    b.HasOne("ITKANSys_api.Models.Entities.Param.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("SiteID")
                        .IsRequired()
                        .HasConstraintName("FK_SMQ_SiteID");

                    b.Navigation("Sites");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.ProcObjectifs", b =>
                {
                    b.HasOne("ITKANSys_api.Models.Procedures", "Procedures")
                        .WithMany()
                        .HasForeignKey("ProcID")
                        .IsRequired()
                        .HasConstraintName("FK_ProcesObjectifs_ProcessusID");

                    b.Navigation("Procedures");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.ProcesObjectifs", b =>
                {
                    b.HasOne("ITKANSys_api.Models.Processus", "Processus")
                        .WithMany()
                        .HasForeignKey("ProcessusID")
                        .IsRequired()
                        .HasConstraintName("FK_ProcesObjectifs_ProcessusID");

                    b.Navigation("Processus");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.ResultatsIndicateurs", b =>
                {
                    b.HasOne("ITKANSys_api.Models.Entities.Indicateurs", "Indicateurs")
                        .WithMany()
                        .HasForeignKey("IndicateurID")
                        .IsRequired()
                        .HasConstraintName("FK_ResultatsIndicateurs_ProcessusID");

                    b.Navigation("Indicateurs");
                });

            modelBuilder.Entity("ITKANSys_api.Models.PQ", b =>
                {
                    b.HasOne("ITKANSys_api.Models.Entities.Param.SMQ", "SMQ")
                        .WithMany()
                        .HasForeignKey("SMQID")
                        .IsRequired()
                        .HasConstraintName("FK_PQ_SMQID");

                    b.Navigation("SMQ");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Permission", b =>
                {
                    b.HasOne("ITKANSys_api.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("ITKANSys_api.Models.PermissionRole", b =>
                {
                    b.HasOne("ITKANSys_api.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("ITKANSys_api.Models.Permission", "Permissions")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .IsRequired()
                        .HasConstraintName("FK_PermissionRoles_Permissions_PermissionId");

                    b.HasOne("ITKANSys_api.Models.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_PermissionRoles_Roles_RoleId");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Permissions");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("ITKANSys_api.Models.ProcDocuments", b =>
                {
                    b.HasOne("ITKANSys_api.Models.Procedures", "Procedure")
                        .WithMany()
                        .HasForeignKey("ProcID")
                        .IsRequired()
                        .HasConstraintName("FK_ProcDocuments_ProcID");

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Procedures", b =>
                {
                    b.HasOne("ITKANSys_api.Models.Processus", "Processus")
                        .WithMany()
                        .HasForeignKey("ProcessusID")
                        .IsRequired()
                        .HasConstraintName("FK_Procedures_ProcID");

                    b.Navigation("Processus");
                });

            modelBuilder.Entity("ITKANSys_api.Models.ProcesDocuments", b =>
                {
                    b.HasOne("ITKANSys_api.Models.Processus", "Processus")
                        .WithMany()
                        .HasForeignKey("ProcessusID")
                        .IsRequired()
                        .HasConstraintName("FK_ProcesDocuments_ProcID");

                    b.Navigation("Processus");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Processus", b =>
                {
                    b.HasOne("ITKANSys_api.Models.Entities.Audit", "Audit")
                        .WithMany("Processus")
                        .HasForeignKey("AuditID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITKANSys_api.Models.Entities.Param.Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("Categorie_ID")
                        .IsRequired()
                        .HasConstraintName("FK_Processus_Categorie_ID");

                    b.HasOne("ITKANSys_api.Models.User", "CoPiloteUser")
                        .WithMany()
                        .HasForeignKey("CoPilote")
                        .IsRequired()
                        .HasConstraintName("FK_Processus_CoPilote_ID");

                    b.HasOne("ITKANSys_api.Models.User", "PiloteUser")
                        .WithMany()
                        .HasForeignKey("Pilote")
                        .IsRequired()
                        .HasConstraintName("FK_Processus_Pilote_ID");

                    b.HasOne("ITKANSys_api.Models.Entities.Param.SMQ", "SMQ")
                        .WithMany()
                        .HasForeignKey("SMQ_ID")
                        .IsRequired()
                        .HasConstraintName("FK_Processus_SMQ_ID");

                    b.HasOne("ITKANSys_api.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("USER_ID")
                        .IsRequired()
                        .HasConstraintName("FK_Processus_USER_ID");

                    b.Navigation("Audit");

                    b.Navigation("Categories");

                    b.Navigation("CoPiloteUser");

                    b.Navigation("PiloteUser");

                    b.Navigation("SMQ");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Role", b =>
                {
                    b.HasOne("ITKANSys_api.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ITKANSys_api.Models.User", b =>
                {
                    b.HasOne("ITKANSys_api.Models.Role", "UserRole")
                        .WithMany()
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_Users_IdRole");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("ITKANSys_api.Models.Entities.Audit", b =>
                {
                    b.Navigation("Constats");

                    b.Navigation("Processus");
                });
#pragma warning restore 612, 618
        }
    }
}
